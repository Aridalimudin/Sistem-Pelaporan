@extends('layouts.main')
@section('title', 'Track Laporan - MTS AR-RIYADL')
@section('content')

    <input type="hidden" id="isReporter" value="{{(bool)$reporter ? '1' : '0'}}">
    <div class="container text-center mt-5 {{ (bool)$reporter ? 'hidden' : '' }}" id="trackingPage"> 
        <div class="tracking-header">
            <h3 class="fw-bold">TRACK LAPORAN ANDA</h3>
            <p>Klik tombol di bawah untuk melacak status laporan Anda</p>
        </div>

        <div class="col-md-6 mx-auto">
            <button class="btn btn-primary btn-track mt-3 w-100" onclick="trackReportModule.openTrackingPopup()">
                <i class="fas fa-search me-2"></i>Track Laporan
            </button>
        </div>
    </div>

    <div id="trackingPopup" class="popup">
        <div class="popup-content shadow-lg rounded">
            <span class="close" onclick="trackReportModule.closePopup()">&times;</span>
            <div class="popup-header">
                <i class="fas fa-search-location popup-icon"></i>
                <h5 class="fw-bold">TRACK LAPORAN</h5>
                <p>Masukkan kode unik laporan Anda untuk melacak status</p>
            </div>

            <div class="popup-body">
                <form action="{{route('track')}}" id="form-track" method="GET">
                    <div class="input-group mb-3">
                        <span class="input-group-text bg-primary text-white">
                            <i class="fas fa-fingerprint"></i>
                        </span>
                        <input type="text" name="code" id="trackingCode" class="form-control shadow-sm"
                            placeholder="Contoh: HTC-1234" required>
                    </div>
                    <div id="errorMessage" class="text-danger mb-3" style="display: none;">
                        <small><i class="fas fa-exclamation-circle me-1"></i>Kode laporan harus diisi</small>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary px-5">
                            <i class="fas fa-search me-2"></i>Periksa Status
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div id="errorPopup" class="popup">
        <div class="error-popup-content">
            <div class="error-icon-container">
                <div class="error-circle">
                    <i class="fas fa-exclamation"></i>
                </div>
            </div>
            <h5 class="error-title">LAPORAN TIDAK DITEMUKAN</h5>
            <p class="error-message">Kode atau laporan tidak tersedia. Silakan periksa kembali kode yang Anda masukkan.</p>
            <button class="error-btn" onclick="trackReportModule.closePopup()">
                Tutup
            </button>
        </div>
    </div>

    @if((bool)$reporter)
    <div class="container mt-4 mb-5" id="detailPage">
        <div class="row justify-content-center">
            <div class="col-md-10">
                <div class="card shadow-lg detail-card">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0 text-center">DETAIL LAPORAN</h4>
                        <div class="kode-container">
                            <span>Kode Laporan:</span>
                            <span id="kode-laporan" class="badge bg-light text-primary">{{$reporter->code}}</span>
                        </div>
                    </div>
                    <div class="tracking-wrapper">
                    <div class="progress-timeline">
                        <div class="timeline-line">
                            <div class="timeline-progress" style="width: 50%;"></div>
                        </div>

                        <div class="timeline-steps">
                            @php
                                $steps = [
                                    ['title' => 'Terkirim', 'icon' => 'fas fa-paper-plane'],
                                    ['title' => 'Diterima', 'icon' => 'fas fa-clipboard-check'],
                                    ['title' => 'Diverifikasi', 'icon' => 'fas fa-check-circle'],
                                    ['title' => 'Diproses', 'icon' => 'fas fa-cogs'],
                                    ['title' => 'Selesai', 'icon' => 'fas fa-flag-checkered'],
                                    ['title' => 'Ditolak', 'icon' => 'fas fa-times-circle'], // Ini adalah step index 5
                                ];
                            @endphp
                            @foreach($steps as $index => $step)
                                {{-- Tambahkan kondisi untuk menyembunyikan step 'Ditolak' secara default --}}
                                <div class="timeline-step {{ $index === 5 ? 'timeline-step-rejected' : '' }}" data-step="{{ $index }}" style="{{ $index === 5 && $reporter->status != 5 ? 'display: none;' : '' }}">
                                    <div class="step-circle">
                                        <i class="{{ $step['icon'] }}"></i>
                                    </div>
                                    <div class="step-info">
                                        <h6 class="step-title">{{ $step['title'] }}</h6>
                                        <span class="step-time"></span>
                                    </div>
                                </div>
                            @endforeach

                            {{-- Tampilkan alert penolakan hanya jika statusnya memang ditolak --}}
                            @if($reporter->status == 5)
                            <div class="alert alert-rejection" role="alert">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-exclamation-triangle alert-icon"></i>
                                    <div>
                                        <h5 class="alert-title mb-2">Laporan Ditolak</h5>
                                        <p class="mb-0">
                                            Laporan Anda tidak dapat diproses lebih lanjut. 
                                            @if($reporter->rejection_reason)
                                                <br><strong>Alasan:</strong> {{ $reporter->rejection_reason }}
                                            @endif
                                            <br>Silakan hubungi admin untuk informasi lebih lanjut atau ajukan laporan baru dengan informasi yang lebih lengkap.
                                        </p>
                                    </div>
                                </div>
                            </div>
                            @endif

                        </div>
                    </div>

                    <div class="status-card">
                        <div class="status-header">
                            <div class="status-icon">
                                <i class="fas fa-check-circle"></i> 
                            </div>
                            <div class="status-title">
                                <h5>Status: Laporan Terkirim</h5> 
                                <span class="status-date">{{$reporter->created_at->format('d M Y')}}</span> 
                            </div>
                        </div>
                        <div class="status-description">
                            <p>Laporan Anda telah berhasil masuk ke dalam sistem dan mendapatkan kode unik untuk tracking. Tim kami akan segera meninjau laporan yang Anda berikan.</p> {{-- Text will be set by JS --}}
                        </div>
                        <div class="status-progress-bar">
                            <div class="progress-bar-container">
                                <div class="progress-bar-fill" style="width: 20%;"></div> 
                            </div>
                            <span class="progress-text">20% Selesai</span> 
                        </div>
                    </div>

                    <div class="row mt-5">
                        <div class="col-12 mb-3">

                            @if($reporter->urgency == 1)
                                <div class="alert urgency-alert urgency-ringan" role="alert">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    <strong>Laporan Prioritas Rendah</strong> - Dapat ditangani sesuai jadwal rutin dan tidak memerlukan tindakan mendesak
                                </div>
                            @elseif($reporter->urgency == 2)
                                <div class="alert urgency-alert urgency-sedang" role="alert">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    <strong>Laporan Prioritas Sedang</strong> - Memerlukan perhatian dalam waktu dekat dan penanganan terencana
                                </div>

                            @elseif($reporter->urgency == 3)
                                <div class="alert urgency-alert urgency-tinggi" role="alert">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    <strong>Laporan Prioritas Tinggi</strong> - Memerlukan perhatian khusus dan penanganan segera
                                </div>
                            @endif


                        </div>
                        <div class="col-md-6">
                            <div class="card info-card mb-4">
                                            <div class="card-header bg-info text-white">
                                                <h5 class="mb-0"><i class="fas fa-user me-2"></i>Informasi Pelapor</h5>
                                            </div>
                                            <div class="card-body">
                                                <table class="table table-borderless">
                                                    <tr>
                                                        <td width="40%"><strong>NIS Pelapor :</strong></td>
                                                        <td>{{$reporter->student?->nis}}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Email :</strong></td>
                                                        <td>{{$reporter->student?->email}}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Nama :</strong></td>
                                                        <td>{{$reporter->student?->name}}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Tanggal Lapor :     </strong></td>
                                                        <td>{{$reporter->created_at->format('d F Y')}}</td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="card info-card mb-4">
                                            <div class="card-header bg-warning text-dark">
                                                <h5 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i>Informasi Kejadian</h5>
                                            </div>
                                            <div class="card-body">
                                                <table class="table table-borderless">
                                                    <tr>
                                                        <td width="40%"><strong>Kategori Kasus :</strong></td>
                                                        <td>
                                                            <ul class="category-list" id="categoryList"> 
                                                                @php
                                                                    $categoriesArray = isset($categories) ? explode(',', $categories) : [];
                                                                @endphp
                                                                @foreach($categoriesArray as $category)
                                                                    @php
                                                                        $trimmed = trim($category);
                                                                        $iconClass = 'icon-default';
                                                                        if (stripos($trimmed, 'verbal') !== false) {
                                                                            $iconClass = 'icon-verbal';
                                                                        } elseif (stripos($trimmed, 'fisik') !== false) {
                                                                            $iconClass = 'icon-fisik';
                                                                        } elseif (stripos($trimmed, 'pelecehan') !== false || stripos($trimmed, 'seksual') !== false) {
                                                                            $iconClass = 'icon-seksual';
                                                                        }
                                                                    @endphp
                                                                    <li class="category-item">
                                                                        <div class="category-icon {{ $iconClass }}"></div>
                                                                        <span class="category-text">{{ $trimmed }}</span>
                                                                    </li>
                                                                @endforeach
                                                            </ul>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Pelaku :</strong></td>
                                                        <td>{{ $reporter->nama_pelaku ?? 'Nama Pelaku' }}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Korban :</strong></td>
                                                        <td>{{ $reporter->nama_korban ?? 'Nama Korban' }}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Saksi :</strong></td>
                                                        <td>{{ $reporter->nama_saksi ?? 'Nama Saksi' }}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Lokasi Kejadian :</strong></td>
                                                        <td>{{ $reporter->lokasi ?? 'Ruang Kelas XII-A' }}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Waktu Kejadian :</strong></td>
                                                        <td>{{ ($reporter->tanggal ?? false) ? \Carbon\Carbon::parse($reporter->tanggal)->format('d M Y') . ', ' . \Carbon\Carbon::parse($reporter->jam)->format('H:i') . ' WIB' : '18 Feb 2023, 10:30 WIB' }}</td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                    
                                    <div class="card info-card mb-4">
                                        <div class="card-header bg-secondary text-white">
                                            <h5 class="mb-0"><i class="fas fa-align-left me-2"></i>Uraian Kejadian</h5>
                                        </div>
                                        <div class="card-body">
                                            <p>{{$reporter->description}}</p>
                                        </div>
                                    </div>

                                    <div class="col-md-6 col-lg-6 mb-4">
                                        <div class="card info-card h-100">
                                            <div class="card-header bg-success text-white">
                                                <h5 class="mb-0"><i class="fas fa-info-circle me-2"></i>Informasi Tambahan</h5>
                                            </div>
                                            <div class="card-body">
                                                @if ($reporter->additional_info)
                                                    <p>{{ $reporter->additional_info }}</p>
                                                @else
                                                    <p class="text-muted">Belum ada informasi tambahan yang dilaporkan.</p>
                                                @endif
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6 col-lg-6 mb-4">
                                        <div class="card info-card h-100">
                                            <div class="card-header bg-danger text-white">
                                                <h5 class="mb-0"><i class="fas fa-hands-helping me-2"></i>Tindakan yang Diharapkan</h5>
                                            </div>
                                            <div class="card-body">
                                                @if ($reporter->expected_action)
                                                    <p>{{ $reporter->expected_action }}</p>
                                                @else
                                                    <p class="text-muted">Pelapor belum menentukan tindakan yang diharapkan.</p>
                                                @endif
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card info-card mb-4">
                                        <div class="card-header bg-dark text-white">
                                            <h5 class="mb-0"><i class="fas fa-photo-video me-2"></i>Bukti Foto & Video</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="masonry-container">
                                                @foreach($reporter->reporterFile as $key => $value)
                                                    @php
                                                        $fileExtension = strtolower(pathinfo($value->file, PATHINFO_EXTENSION));
                                                        $isVideo = in_array($fileExtension, ['mp4', 'avi', 'mov', 'wmv', 'webm', 'ogg']);
                                                        $fileType = $isVideo ? 'video' : 'image';
                                                    @endphp

                                                    <div class="masonry-item {{ $fileType }}" style="--item-index: {{ $key }}" onclick="trackReportModule.openLightbox({{ $key }})">
                                                        @if($isVideo)
                                                            <video class="masonry-video" preload="metadata" muted>
                                                                <source src="{{asset('storage/'. $value->file)}}" type="video/{{ $fileExtension }}">
                                                                Video tidak dapat dimuat
                                                            </video>
                                                            <div class="file-type-badge video">
                                                                <i class="fas fa-play me-1"></i>Video
                                                            </div>
                                                        @else
                                                            <img src="{{asset('storage/'. $value->file)}}" class="masonry-image" alt="Bukti Kejadian {{ $key + 1 }}">
                                                            <div class="file-type-badge image">
                                                                <i class="fas fa-image me-1"></i>Foto
                                                            </div>
                                                        @endif
                                                    </div>
                                                @endforeach

                                            </div>
                                        </div>
                                    </div>

                                    <div id="lightbox" class="lightbox" onclick="trackReportModule.closeLightbox(event)">
                                        <div class="lightbox-content">
                                            <button class="lightbox-close" onclick="trackReportModule.closeLightbox()" title="Tutup">
                                                <i class="fas fa-times"></i>
                                            </button>
                                            <button class="lightbox-nav lightbox-prev" onclick="trackReportModule.prevMedia()" title="Media Sebelumnya">
                                                <i class="fas fa-chevron-left"></i>
                                            </button>
                                            <button class="lightbox-nav lightbox-next" onclick="trackReportModule.nextMedia()" title="Media Selanjutnya">
                                                <i class="fas fa-chevron-right"></i>
                                            </button>

                                            <div id="lightbox-loading" class="lightbox-loading" style="display: none;">
                                                <div class="spinner"></div>
                                            </div>

                                            <img id="lightbox-image" class="lightbox-image" src="" alt="" style="display: none;">

                                            <video id="lightbox-video" class="lightbox-video" controls preload="metadata" style="display: none;">
                                                <source id="lightbox-video-source" src="" type="">
                                                Browser Anda tidak mendukung pemutar video.
                                            </video>

                                            <div class="lightbox-counter">
                                                <span id="current-media">1</span> / <span id="total-media">{{ count($reporter->reporterFile) }}</span>
                                            </div>

                                            <div id="lightbox-video-controls" class="lightbox-video-controls" style="display: none;">
                                                <button class="video-control-btn" onclick="trackReportModule.toggleVideoPlayPause()" title="Play/Pause">
                                                    <i id="play-pause-icon" class="fas fa-play"></i>
                                                </button>
                                                <button class="video-control-btn" onclick="trackReportModule.toggleVideoMute()" title="Mute/Unmute">
                                                    <i id="mute-icon" class="fas fa-volume-up"></i>
                                                </button>
                                                <button class="video-control-btn" onclick="trackReportModule.toggleVideoFullscreen()" title="Fullscreen">
                                                    <i class="fas fa-expand"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="text-center mt-4">
                                        <button class="btn btn-primary px-5" onclick="trackReportModule.backToTracking()">
                                            <i class="fas fa-arrow-left me-2"></i>Kembali ke Tracking
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @endif

@include('track_laporan.complete')

@push('styles')
<link rel="stylesheet" href="{{asset('css/style_track.css')}}">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
@endpush

@push('scripts')
<script>
    const trackReportModule = (function() {
        let originalCurrentStep = 0;
        let isPreviewMode = false;
        let mediaFiles = [];
        let currentMediaIndex = 0;
        let isVideoPlaying = false;

        const trackingStepsData = {
            0: {
                title: "Terkirim",
                status: "Laporan Terkirim",
                description: "Laporan Anda telah berhasil masuk ke dalam sistem dan mendapatkan kode unik untuk tracking. Tim kami akan segera meninjau laporan yang Anda berikan.",
                icon: "fas fa-paper-plane",
                progress: 20,
                hasAction: false,
                date: "{{ @$reporter?->created_at->format('d M Y') ?? 'N/A' }}"
            },
            1: {
                title: "Diterima",
                status: "Laporan Diterima",
                description: "Laporan Anda telah diterima. Silakan lengkapi dokumen lainnya agar laporan Anda bisa melanjutkan ke proses verifikasi.",
                icon: "fas fa-clipboard-check",
                progress: 40,
                hasAction: true,
                actionText: "Lengkapi Dokumen",
                actionType: "complete_documents",
                date: "{{ @$reporter?->created_at->format('d M Y') ?? 'N/A' }}" 
            },
            2: {
                title: "Diverifikasi",
                status: "Diverifikasi",
                description: "Laporan Anda telah melalui proses verifikasi dan dinyatakan valid. Semua informasi yang diperlukan telah lengkap dan laporan akan segera diteruskan ke tahap penanganan selanjutnya.",
                icon: "fas fa-check-circle",
                progress: 60,
                hasAction: false,
                date: "{{ @$reporter?->created_at->format('d M Y') ?? 'N/A' }}" 
            },
            3: {
                title: "Diproses",
                status: "Sedang Diproses",
                description: "Laporan sedang dalam tahap penanganan oleh tim yang berwenang. Investigasi mendalam sedang dilakukan untuk menindaklanjuti kasus yang Anda laporkan.",
                icon: "fas fa-cogs",
                progress: 80,
                hasAction: false,
                date: "-"
            },
            4: {
                title: "Selesai",
                status: "Selesai Ditangani",
                description: "Laporan Anda telah selesai ditangani. Tindakan yang diperlukan telah dilakukan sesuai dengan kebijakan dan prosedur yang berlaku. Terima kasih atas partisipasi Anda.",
                icon: "fas fa-flag-checkered",
                progress: 100,
                hasAction: false,
                date: "-"
            },
            5: { // Status Ditolak
                title: "Ditolak",
                status: "Laporan Ditolak",
                description: "Laporan Anda tidak dapat diproses lebih lanjut karena tidak memenuhi kriteria atau informasi yang diberikan tidak valid. Silakan hubungi admin untuk informasi lebih lanjut.",
                icon: "fas fa-times-circle",
                progress: 0,
                hasAction: true,
                actionText: "Hubungi Admin",
                actionType: "contact_admin",
                date: "{{ @$reporter?->updated_at->format('d M Y') ?? 'N/A' }}", // Gunakan updated_at untuk alasan penolakan
                isRejected: true
            }
        };

        function init() {
            const isReporterVal = document.getElementById('isReporter').value;
            const reporterExists = isReporterVal === '1';

            if (!reporterExists) {
                trackReportModule.openTrackingPopup();
                document.getElementById('detailPage').classList.add('hidden');
                document.getElementById('trackingPage').classList.remove('hidden');
            } else {
                document.getElementById('detailPage').classList.remove('hidden');
                document.getElementById('trackingPage').classList.add('hidden');
                // Panggil initializeElegantTracking dengan status laporan saat ini
                trackReportModule.initializeElegantTracking({{ intval($reporter->status ?? 0) }});
            }

            document.addEventListener('keydown', handleKeyboardNavigation);

            const masonryItems = document.querySelectorAll('.masonry-item');
            mediaFiles = [];
            masonryItems.forEach((item, index) => {
                const isVideo = item.classList.contains('video');
                let mediaSrc = '';
                let mediaType = '';

                if (isVideo) {
                    const video = item.querySelector('video source');
                    mediaSrc = video ? video.src : '';
                    mediaType = video ? video.type : 'video/' + item.querySelector('video source').src.split('.').pop();
                } else {
                    const img = item.querySelector('img');
                    mediaSrc = img ? img.src : '';
                    mediaType = 'image';
                }

                mediaFiles.push({
                    src: mediaSrc,
                    type: mediaType,
                    isVideo: isVideo,
                    index: index
                });
            });

            document.getElementById('total-media').textContent = mediaFiles.length;

            const lightboxVideo = document.getElementById('lightbox-video');
            if (lightboxVideo) {
                lightboxVideo.addEventListener('play', () => { isVideoPlaying = true; updatePlayPauseIcon(); });
                lightboxVideo.addEventListener('pause', () => { isVideoPlaying = false; updatePlayPauseIcon(); });
                lightboxVideo.addEventListener('ended', () => { isVideoPlaying = false; updatePlayPauseIcon(); setTimeout(trackReportModule.nextMedia, 1000); });
            }

            document.querySelectorAll('.masonry-video').forEach(video => {
                if (!video.poster) {
                    video.addEventListener('loadeddata', function() { this.currentTime = 1; });
                    video.addEventListener('seeked', function() {
                        const canvas = document.createElement('canvas');
                        const ctx = canvas.getContext('2d');
                        canvas.width = this.videoWidth;
                        canvas.height = this.videoHeight;
                        ctx.drawImage(this, 0, 0);
                        this.poster = canvas.toDataURL();
                    });
                }
            });

            const categoryListElement = document.getElementById('categoryList');
            if (categoryListElement && reporterExists) {
                const categoriesString = @json($categories ?? '');
                generateCategoryList(categoriesString);
            }
        }

        function openTrackingPopup() {
            document.getElementById('trackingPopup').style.display = 'flex';
            document.getElementById('trackingCode').focus();
            document.getElementById('errorMessage').style.display = 'none';
            document.getElementById('trackingCode').classList.remove('is-invalid');
        }

        function closePopup() {
            const popups = document.querySelectorAll('.popup');
            popups.forEach(popup => {
                popup.style.display = 'none';
            });

            if (typeof window.closeCompleteDocumentsForm === 'function') {
                window.closeCompleteDocumentsForm();
            }
        }

        function checkTrackingCode() {
            const trackingCode = document.getElementById('trackingCode').value.trim();

            if (!trackingCode) {
                document.getElementById('errorMessage').style.display = 'block';
                document.getElementById('trackingCode').classList.add('is-invalid');
                document.getElementById('trackingCode').focus();
                return;
            }

            document.getElementById('errorMessage').style.display = 'none';
            document.getElementById('trackingCode').classList.remove('is-invalid');

            document.getElementById('form-track').submit();
        }

        function backToTracking() {
            document.getElementById('detailPage').style.display = 'none';
            document.getElementById('trackingPage').style.display = 'block';
            document.getElementById('trackingCode').value = '';
            trackReportModule.openTrackingPopup();
        }

        function updateStatusCardOnly(stepNumber) {
            const stepData = trackingStepsData[stepNumber];
            if (!stepData) return;

            const statusCard = document.querySelector('.status-card');
            statusCard.classList.add('loading');

            setTimeout(() => {
                const statusIcon = document.querySelector('.status-icon i');
                const statusTitle = document.querySelector('.status-title h5');
                const statusDate = document.querySelector('.status-date');
                const statusDescription = document.querySelector('.status-description p');
                const progressBar = document.querySelector('.progress-bar-fill');
                const progressText = document.querySelector('.progress-text');

                if (statusIcon) statusIcon.className = stepData.icon;
                if (statusTitle) statusTitle.textContent = `Status: ${stepData.status}`;
                if (statusDate) statusDate.textContent = stepData.date; 
                if (statusDescription) statusDescription.textContent = stepData.description;
                if (progressBar) progressBar.style.width = `${stepData.progress}%`;
                if (progressText) progressText.textContent = `${stepData.progress}% Selesai`;

                updateActionButton(stepData);
                statusCard.classList.remove('loading');
            }, 300);
        }

        function updateStatusCard(stepNumber) {
            const stepData = trackingStepsData[stepNumber];
            if (!stepData) return;

            const statusCard = document.querySelector('.status-card');
            statusCard.classList.add('loading');

            if (stepData.isRejected) {
                statusCard.classList.add('rejected');
            } else {
                statusCard.classList.remove('rejected');
            }

            setTimeout(() => {
                const statusIcon = document.querySelector('.status-icon i');
                const statusTitle = document.querySelector('.status-title h5');
                const statusDate = document.querySelector('.status-date');
                const statusDescription = document.querySelector('.status-description p');
                const progressBar = document.querySelector('.progress-bar-fill');
                const progressText = document.querySelector('.progress-text');

                if (statusIcon) statusIcon.className = stepData.icon;
                if (statusTitle) statusTitle.textContent = `Status: ${stepData.status}`;
                if (statusDate) statusDate.textContent = stepData.date;
                if (statusDescription) statusDescription.textContent = stepData.description;
                if (progressBar) progressBar.style.width = `${stepData.progress}%`;
                if (progressText) progressText.textContent = `${stepData.progress}% Selesai`;

                // Update timeline progress bar based on whether it's rejected or not
                const timelineProgress = document.querySelector('.timeline-progress');
                if (timelineProgress) {
                    if (stepData.isRejected) {
                        timelineProgress.style.width = '0%'; // Garis progress nol untuk ditolak
                        timelineProgress.classList.add('rejected'); // Tambahkan kelas rejected untuk warna merah
                    } else {
                        // -2 karena kita punya 6 steps (0-5), tapi Ditolak (5) adalah jalur terpisah.
                        // Jadi untuk progress normal kita punya 5 steps (0-4).
                        timelineProgress.style.width = `${stepNumber * (100 / (Object.keys(trackingStepsData).length - 2))}%`;
                        timelineProgress.classList.remove('rejected');
                    }
                }

                updateTimelineStepsInfo(stepNumber);
                updateActionButton(stepData);
                statusCard.classList.remove('loading');
            }, 300);
        }

        function updateRejectedTimeline() {
            const timelineProgress = document.querySelector('.timeline-progress');
            if (timelineProgress) {
                timelineProgress.style.width = '0%';
                timelineProgress.classList.add('rejected');
            }

            document.querySelectorAll('.timeline-step').forEach((step, index) => {
                const stepData = trackingStepsData[index];
                step.classList.remove('completed', 'active', 'current', 'pending');
                
                if (index === 5) { // Status ditolak
                    step.classList.add('rejected', 'current');
                    step.style.display = 'flex'; // Tampilkan step ditolak
                    step.style.cursor = 'pointer'; // Agar bisa diklik untuk melihat detail
                    step.setAttribute('title', `Klik untuk melihat detail: ${stepData.title}`);
                } else if (index === 0) { // Terkirim tetap completed
                    step.classList.add('completed');
                    step.style.display = 'flex'; // Pastikan terkirim terlihat
                    step.style.cursor = 'pointer';
                    step.setAttribute('title', `Klik untuk melihat detail: ${stepData.title}`);
                } else {
                    step.classList.add('pending'); // Semua step lain jadi pending
                    step.style.display = 'none'; // Sembunyikan step lain
                }
            });
        }

        function updateTimelineStepsInfo(currentStep) {
            document.querySelectorAll('.timeline-step').forEach((step, index) => {
                const stepData = trackingStepsData[index];
                if (stepData) {
                    const stepTitle = step.querySelector('.step-title');
                    const stepTime = step.querySelector('.step-time');
                    const stepIcon = step.querySelector('.step-circle i');

                    if (stepTitle) stepTitle.textContent = stepData.title;
                    if (stepTime) {
                        stepTime.textContent = stepData.date;
                    }
                    if (stepIcon) stepIcon.className = stepData.icon;
                }
            });
        }

        function updateActionButton(stepData) {
            const existingButton = document.querySelector('.status-action-button');
            if (existingButton) {
                existingButton.remove();
            }

            const statusCard = document.querySelector('.status-card'); // Pindahkan ini ke dalam scope
            const actionButton = document.createElement('div');
            actionButton.className = 'status-action-button';

            if (stepData.hasAction && stepData.actionType === "complete_documents") {
                actionButton.innerHTML = `
                    <button class="btn-complete-documents" onclick="window.openCompleteDocumentsForm()">
                        <i class="fas fa-plus-circle"></i>
                        ${stepData.actionText}
                    </button>
                `;
                statusCard.appendChild(actionButton);
            } else if (stepData.hasAction && stepData.actionType === "contact_admin") {
                actionButton.innerHTML = `
                    <button class="btn-contact-admin" onclick="contactAdmin()">
                        <i class="fas fa-phone"></i>
                        ${stepData.actionText}
                    </button>
                `;
                statusCard.appendChild(actionButton);
            }
        }

        function contactAdmin() {
            alert('Silakan hubungi admin melalui email: admin@mtsarriyadl.sch.id atau telepon: (021) 1234-5678');
        }

        // Fungsi untuk menampilkan pesan sukses
        function showSuccessMessage() {
            const successMessage = document.createElement('div');
            successMessage.className = 'success-notification';
            successMessage.innerHTML = `
                <div class="success-content">
                    <i class="fas fa-check-circle"></i>
                    <h4>Laporan Berhasil Dikirim!</h4>
                    <p>Terima kasih telah melengkapi laporan kejadian. Tim kami akan segera memproses laporan Anda dan mengambil tindakan yang diperlukan.</p>
                </div>
            `;
            
            document.body.appendChild(successMessage);
            
            setTimeout(() => {
                successMessage.classList.add('show');
            }, 100);
            
            setTimeout(() => {
                successMessage.classList.remove('show');
                setTimeout(() => {
                    successMessage.remove();
                }, 500);
            }, 5000);
        }

        function handleStepClick(stepElement, stepNumber) {
            // Izinkan klik pada step jika statusnya completed, active, atau rejected (jika step 5)
            if (!stepElement.classList.contains('completed') && !stepElement.classList.contains('active') && !stepElement.classList.contains('rejected')) {
                return;
            }

            document.querySelectorAll('.timeline-step').forEach(step => {
                step.classList.remove('current');
            });

            stepElement.classList.add('current');
            updateStatusCardOnly(stepNumber);

            document.querySelector('.status-card').scrollIntoView({
                behavior: 'smooth',
                block: 'nearest'
            });

            createRippleEffect(stepElement);
            isPreviewMode = true;
            setTimeout(() => {
                if (isPreviewMode && stepNumber !== originalCurrentStep) { // Hanya restore jika bukan step saat ini
                    restoreToCurrentStep();
                }
            }, 10000);
        }

        function restoreToCurrentStep() {
            isPreviewMode = false;
            if (originalCurrentStep === 5) {
                updateRejectedTimeline();
            } else {
                restoreOriginalStepStates();
            }
            updateStatusCardOnly(originalCurrentStep);
        }

        function restoreOriginalStepStates() {
            document.querySelectorAll('.timeline-step').forEach((step, index) => {
                const stepNumber = index;
                step.classList.remove('completed', 'active', 'current', 'pending', 'rejected');

                // Sembunyikan step ditolak jika tidak pada status ditolak
                if (stepNumber === 5) {
                    step.style.display = 'none';
                    return;
                }

                if (stepNumber < originalCurrentStep) {
                    step.classList.add('completed');
                } else if (stepNumber === originalCurrentStep) {
                    step.classList.add('active', 'current');
                } else {
                    step.classList.add('pending');
                }
                step.style.display = 'flex'; // Pastikan step normal ditampilkan
            });
        }

        function createRippleEffect(element) {
            const ripple = document.createElement('div');
            ripple.style.cssText = `
                position: absolute;
                border-radius: 50%;
                background: rgba(102, 126, 234, 0.3);
                transform: scale(0);
                animation: ripple 0.6s linear;
                pointer-events: none;
                z-index: 100;
            `;

            const rect = element.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = (rect.width / 2 - size / 2) + 'px';
            ripple.style.top = (rect.height / 2 - size / 2) + 'px';

            element.style.position = 'relative';
            element.appendChild(ripple);

            setTimeout(() => {
                ripple.remove();
            }, 600);
        }

        // CSS untuk animasi ripple
        const rippleCSS = `
            @keyframes ripple {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }
        `;
        const style = document.createElement('style');
        style.textContent = rippleCSS;
        document.head.appendChild(style);

        function initializeElegantTracking(currentStep) {
            currentStep = parseInt(currentStep);
            originalCurrentStep = currentStep;
            isPreviewMode = false;
            
            if (currentStep === 5) { // Jika status adalah ditolak
                updateRejectedTimeline();
                updateStatusCard(currentStep);
            } else {
                updateTrackingSteps(currentStep);
                updateStatusCard(currentStep);
            }

            document.querySelectorAll('.timeline-step').forEach((step, index) => {
                const stepNumber = index;

                step.addEventListener('click', () => {
                    if (stepNumber === originalCurrentStep && isPreviewMode) {
                        restoreToCurrentStep();
                    } else {
                        handleStepClick(step, stepNumber);
                    }
                });

                // Perbarui kondisi cursor dan title
                if (step.classList.contains('completed') || step.classList.contains('active') || step.classList.contains('rejected')) {
                    step.style.cursor = 'pointer';
                    step.setAttribute('title', `Klik untuk melihat detail: ${trackingStepsData[stepNumber].title}`);

                    step.addEventListener('mouseenter', () => {
                        if (!step.classList.contains('current')) {
                            step.style.transform = 'translateY(-8px) scale(1.02)';
                        }
                    });

                    step.addEventListener('mouseleave', () => {
                        if (!step.classList.contains('current')) {
                            step.style.transform = 'translateY(0) scale(1)';
                        }
                    });
                } else {
                    step.style.cursor = 'default';
                    step.setAttribute('title', `Belum mencapai tahap ini`);
                }
            });

            document.querySelector('.status-card').addEventListener('click', (e) => {
                if (isPreviewMode && !e.target.closest('.status-action-button')) {
                    restoreToCurrentStep();
                }
            });
        }

        function updateTrackingSteps(currentStep) {
            document.querySelectorAll('.timeline-step').forEach((step, index) => {
                const stepNumber = index;
                const stepData = trackingStepsData[index];

                step.classList.remove('completed', 'active', 'current', 'pending', 'rejected');

                // Sembunyikan step 'Ditolak' jika bukan status 5
                if (stepNumber === 5) {
                    step.style.display = 'none';
                    return;
                }

                if (stepNumber < currentStep) {
                    step.classList.add('completed');
                } else if (stepNumber === currentStep) {
                    step.classList.add('active', 'current');
                } else {
                    step.classList.add('pending');
                }
                step.style.display = 'flex'; // Pastikan step normal ditampilkan
            });
        }

        function animateStepChange(newStep) {
            originalCurrentStep = newStep;
            const statusCard = document.querySelector('.status-card');
            const timeline = document.querySelector('.progress-timeline');

            statusCard.style.transform = 'translateY(20px)';
            statusCard.style.opacity = '0.7';
            timeline.style.transform = 'scale(0.98)';
            timeline.style.opacity = '0.8';

            setTimeout(() => {
                if (newStep === 5) {
                    updateRejectedTimeline();
                } else {
                    updateTrackingSteps(newStep);
                }
                updateStatusCard(newStep);

                statusCard.style.transform = 'translateY(0)';
                statusCard.style.opacity = '1';
                timeline.style.transform = 'scale(1)';
                timeline.style.opacity = '1';
            }, 300);
        }

        // Navigasi Keyboard untuk pop-up
        function handleKeyboardNavigation(event) {
            if (event.key === 'Escape') {
                trackReportModule.closePopup();
            }
            if (event.key === 'Enter' && document.activeElement === document.getElementById('trackingCode')) {
                trackReportModule.checkTrackingCode();
            }
        }

        // Fungsi Icon & Badge Kategori
        const categoryMap = {
            'bullying verbal': { iconClass: 'icon-bullying-verbal', symbol: '💬' },
            'bullying fisik': { iconClass: 'icon-bullying-fisik', symbol: '👊' },
            'pelecehan seksual verbal': { iconClass: 'icon-pelecehan-verbal', symbol: '🗣️' },
            'pelecehan seksual fisik': { iconClass: 'icon-pelecehan-fisik', symbol: '⚠️' },
            'default': { iconClass: 'icon-default', symbol: '📋' }
        };

        function getIconClass(category) {
            const lowerCategory = category.toLowerCase();
            if (lowerCategory.includes('bullying') && lowerCategory.includes('verbal')) return 'icon-bullying-verbal';
            if (lowerCategory.includes('bullying') && lowerCategory.includes('fisik')) return 'icon-bullying-fisik';
            if (lowerCategory.includes('pelecehan') && lowerCategory.includes('verbal')) return 'icon-pelecehan-verbal';
            if (lowerCategory.includes('pelecehan') && lowerCategory.includes('fisik')) return 'icon-pelecehan-fisik';
            return 'icon-default';
        }

        function getIconSymbol(category) {
            const lowerCategory = category.toLowerCase();
            if (lowerCategory.includes('bullying') && lowerCategory.includes('verbal')) return '';
            if (lowerCategory.includes('bullying') && lowerCategory.includes('fisik')) return '';
            if (lowerCategory.includes('pelecehan') && lowerCategory.includes('verbal')) return '';
            if (lowerCategory.includes('pelecehan') && lowerCategory.includes('fisik')) return '';
            return '📋';
        }

        function generateCategoryList(categoriesString) {
            const categoryList = document.getElementById('categoryList');
            if (!categoryList) {
                console.warn('Elemen #categoryList tidak ditemukan. Tidak dapat menggenerate daftar kategori.');
                return;
            }

            const categoriesArray = categoriesString.split(',');
            categoryList.innerHTML = '';

            categoriesArray.forEach(category => {
                const trimmedCategory = category.trim();
                const iconClass = getIconClass(trimmedCategory);
                const iconSymbol = getIconSymbol(trimmedCategory);

                const listItem = document.createElement('li');
                listItem.className = 'category-item';

                listItem.innerHTML = `
                    <div class="category-icon ${iconClass}">${iconSymbol}</div>
                    <span class="category-text">${trimmedCategory}</span>
                `;
                categoryList.appendChild(listItem);
            });
        }
        
        function getBadgeClass(category) {
            const lowerCategory = category.toLowerCase();
            if (lowerCategory.includes('bullying') && lowerCategory.includes('verbal')) return 'bullying-verbal';
            if (lowerCategory.includes('bullying') && lowerCategory.includes('fisik')) return 'bullying-fisik';
            if (lowerCategory.includes('pelecehan') && lowerCategory.includes('verbal')) return 'pelecehan-verbal';
            if (lowerCategory.includes('pelecehan') && lowerCategory.includes('fisik')) return 'pelecehan-fisik';
            return 'bullying-verbal';
        }

        function openLightbox(index) {
            currentMediaIndex = index;
            const lightbox = document.getElementById('lightbox');
            const lightboxImage = document.getElementById('lightbox-image');
            const lightboxVideo = document.getElementById('lightbox-video');
            const lightboxVideoSource = document.getElementById('lightbox-video-source');
            const loading = document.getElementById('lightbox-loading');
            const videoControls = document.getElementById('lightbox-video-controls');

            lightbox.classList.add('active');
            document.body.style.overflow = 'hidden';

            loading.style.display = 'block';
            lightboxImage.style.display = 'none';
            lightboxVideo.style.display = 'none';
            videoControls.style.display = 'none';

            lightboxVideo.pause();
            isVideoPlaying = false;
            updatePlayPauseIcon();

            const currentMedia = mediaFiles[index];

            if (currentMedia.isVideo) {
                lightboxVideoSource.src = currentMedia.src;
                lightboxVideoSource.type = currentMedia.type;
                lightboxVideo.load();

                lightboxVideo.addEventListener('loadeddata', function handler() {
                    loading.style.display = 'none';
                    lightboxVideo.style.display = 'block';
                    lightboxVideo.classList.add('loaded');
                    videoControls.style.display = 'flex';
                    lightboxVideo.removeEventListener('loadeddata', handler); 
                });

                lightboxVideo.addEventListener('error', function handler() {
                    loading.style.display = 'none';
                    console.error('Error loading video:', currentMedia.src);
                    lightboxVideo.removeEventListener('error', handler);
                });

            } else {
                lightboxImage.src = currentMedia.src;
                lightboxImage.classList.remove('loaded');

                lightboxImage.onload = function() {
                    loading.style.display = 'none';
                    lightboxImage.style.display = 'block';
                    lightboxImage.classList.add('loaded');
                };

                lightboxImage.onerror = function() {
                    loading.style.display = 'none';
                    console.error('Error loading image:', currentMedia.src);
                };
            }
            document.getElementById('current-media').textContent = index + 1;
        }

        function closeLightbox(event) {
            if (event && event.target !== event.currentTarget &&
                !event.target.classList.contains('lightbox-close')) {
                return;
            }

            const lightbox = document.getElementById('lightbox');
            const lightboxVideo = document.getElementById('lightbox-video');

            if (lightboxVideo.style.display === 'block') {
                lightboxVideo.pause();
            }

            lightbox.classList.remove('active');
            document.body.style.overflow = '';

            setTimeout(() => {
                document.getElementById('lightbox-image').style.display = 'none';
                document.getElementById('lightbox-video').style.display = 'none';
                document.getElementById('lightbox-video-controls').style.display = 'none';
                document.getElementById('lightbox-image').classList.remove('loaded');
                document.getElementById('lightbox-video').classList.remove('loaded');
            }, 300);
        }

        function nextMedia() {
            if (currentMediaIndex < mediaFiles.length - 1) {
                openLightbox(currentMediaIndex + 1);
            } else {
                openLightbox(0);
            }
        }

        function prevMedia() {
            if (currentMediaIndex > 0) {
                openLightbox(currentMediaIndex - 1);
            } else {
                openLightbox(mediaFiles.length - 1);
            }
        }

        // Fungsi Kontrol Video
        function toggleVideoPlayPause() {
            const video = document.getElementById('lightbox-video');
            if (video.paused) {
                video.play();
                isVideoPlaying = true;
            } else {
                video.pause();
                isVideoPlaying = false;
            }
            updatePlayPauseIcon();
        }

        function updatePlayPauseIcon() {
            const icon = document.getElementById('play-pause-icon');
            if (isVideoPlaying) {
                icon.classList.remove('fa-play');
                icon.classList.add('fa-pause');
            } else {
                icon.classList.remove('fa-pause');
                icon.classList.add('fa-play');
            }
        }

        function toggleVideoMute() {
            const video = document.getElementById('lightbox-video');
            const icon = document.getElementById('mute-icon');

            video.muted = !video.muted;

            if (video.muted) {
                icon.classList.remove('fa-volume-up');
                icon.classList.add('fa-volume-mute');
            } else {
                icon.classList.remove('fa-volume-mute');
                icon.classList.add('fa-volume-up');
            }
        }

        function toggleVideoFullscreen() {
            const video = document.getElementById('lightbox-video');

            if (video.requestFullscreen) {
                video.requestFullscreen();
            } else if (video.webkitRequestFullscreen) {
                video.webkitRequestFullscreen();
            } else if (video.mozRequestFullScreen) {
                video.mozRequestFullScreen();
            } else if (video.msRequestFullscreen) {
                video.msRequestFullscreen();
            }
        }

        let touchStartX = 0;
        let touchEndX = 0;
        let touchStartY = 0;
        let touchEndY = 0;

        return {
            openTrackingPopup: openTrackingPopup,
            closePopup: closePopup,
            checkTrackingCode: checkTrackingCode,
            backToTracking: backToTracking,
            openLightbox: openLightbox,
            closeLightbox: closeLightbox,
            nextMedia: nextMedia,
            prevMedia: prevMedia,
            toggleVideoPlayPause: toggleVideoPlayPause,
            toggleVideoMute: toggleVideoMute,
            toggleVideoFullscreen: toggleVideoFullscreen,
            init: init,
            initializeElegantTracking: initializeElegantTracking,
            // Mengekspos fungsi baru
            showSuccessMessage: showSuccessMessage 
        };
    })();

    document.addEventListener('DOMContentLoaded', trackReportModule.init);

    document.addEventListener('DOMContentLoaded', function() {
        const lightbox = document.getElementById('lightbox');
        if (lightbox) {
            lightbox.addEventListener('touchstart', function(e) {
                trackReportModule.touchStartX = e.changedTouches[0].screenX;
                trackReportModule.touchStartY = e.changedTouches[0].screenY;
            }, { passive: true });

            lightbox.addEventListener('touchend', function(e) {
                trackReportModule.touchEndX = e.changedTouches[0].screenX;
                trackReportModule.touchEndY = e.changedTouches[0].screenY;
                handleSwipeInternal();
            }, { passive: true });

            function handleSwipeInternal() {
                const deltaX = trackReportModule.touchEndX - trackReportModule.touchStartX;
                const deltaY = trackReportModule.touchEndY - trackReportModule.touchStartY;
                const minSwipeDistance = 50;

                if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > minSwipeDistance) {
                    if (deltaX < 0) {
                        trackReportModule.nextMedia();
                    } else {
                        trackReportModule.prevMedia();
                    }
                }
                if (deltaY > minSwipeDistance && Math.abs(deltaX) < minSwipeDistance) {
                    trackReportModule.closeLightbox();
                }
            }
        }
    });

    document.addEventListener('keydown', function(event) {
        // Anda bisa menambahkan logika di sini jika diperlukan
    });

    document.addEventListener('DOMContentLoaded', function() {
        const lightboxVideo = document.getElementById('lightbox-video');

        if (lightboxVideo) {
            lightboxVideo.addEventListener('play', function() {
                trackReportModule.isVideoPlaying = true;
                trackReportModule.updatePlayPauseIcon();
            });

            lightboxVideo.addEventListener('pause', function() {
                trackReportModule.isVideoPlaying = false;
                trackReportModule.updatePlayPauseIcon();
            });

            lightboxVideo.addEventListener('ended', function() {
                trackReportModule.isVideoPlaying = false;
                trackReportModule.updatePlayPauseIcon();
                setTimeout(() => {
                    trackReportModule.nextMedia();
                }, 1000);
            });
        }
    });
</script>
@endpush
@endsection